package com.lms.hexa.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.lms.hexa.command.CriteriaCommand;
import com.lms.hexa.command.LessonRegistCommand;
import com.lms.hexa.dto.LessonVO;
import com.lms.hexa.dto.ManagerVO;
import com.lms.hexa.dto.StandardCodeVO;
import com.lms.hexa.dto.StudentVO;
import com.lms.hexa.dto.TimeTableVO;
import com.lms.hexa.service.LessonService;
import com.lms.hexa.service.ManagerService;
import com.lms.hexa.service.TimeTableService;

@Controller
public class lessoncontroller {
	
	@Autowired
	private ManagerService managerService;
	
	@Autowired
	private TimeTableService timeTableService;
	
	@Autowired
	private LessonService lessonService;
	
	@RequestMapping("/manager/lesson/regist")
	public ModelAndView lessonRegistMain(String name,ModelAndView mnv)throws Exception{
		String url = "/manager/lesson/regist";
		
		List<ManagerVO> teacherList = managerService.getWorkingTeacherListSearchByName(name);
		mnv.addObject("teacherList", teacherList);
		
		Map<String, List<TimeTableVO>> ttMap = timeTableService.getTimeTablevalue();
		mnv.addObject("ttMap", ttMap);
		
		Map<String,List<StandardCodeVO>> ScodeValues = lessonService.getScodeValues();
		mnv.addObject("ScodeValues", ScodeValues);
		
		mnv.setViewName(url);
		return mnv;
	}
	
	@RequestMapping("/manager/lesson/getInfo")
	@ResponseBody
	public ResponseEntity<Map<String,Object>> getTeacherInfoToJSON(String managerId,ModelAndView mnv)throws Exception{
		
		ResponseEntity<Map<String,Object>> entity=null;
		Map<String,Object> dataMap = new HashMap<String, Object>();
		ManagerVO teacherInfo = null;
		List<String> teacherSchedule = null;
		String id = managerId;
		try {
			teacherInfo = managerService.getManagerDetailById(id);		
			teacherSchedule = lessonService.getManagerScheduleListById(id);
			
			dataMap.put("teacherInfo", teacherInfo);
			dataMap.put("teacherSchedule", teacherSchedule);
			
			entity  = new ResponseEntity<Map<String,Object>>(dataMap,HttpStatus.OK);
		} catch (Exception e) {
			entity = new ResponseEntity<Map<String,Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();			
		}

		return entity;
	}
	
	@RequestMapping(value = "/manager/lesson/realRegist", method = RequestMethod.POST)
	public String lessonRealRegist(@ModelAttribute LessonRegistCommand lessonRCommand,RedirectAttributes rttr)throws Exception{
		
		String url = "redirect:/manager/lesson/regist.do";
		LessonVO lessonVO = lessonRCommand.toLessonVO();
		int result = lessonService.registNewLesson(lessonVO);
		
		if(result>0) {
			rttr.addFlashAttribute("msg", "ok");
		}
		rttr.addFlashAttribute("msg", "ng");
		
		return url;
		
	}
	
	@RequestMapping("/manager/lesson/list")
	public ModelAndView lessonList(CriteriaCommand cri,ModelAndView mnv)throws Exception{
		String url = "/manager/lesson/list";
		Map<String,Object> lessonMap = new HashMap<String, Object>();
		
		List<LessonVO> lessonList = lessonService.getLessonListByTeacherName(cri);
		List<StandardCodeVO> lessonStateCodeList = lessonService.getLessonStateCodeList();
		
		lessonMap.put("lessonList", lessonList);
		lessonMap.put("lessonCri", cri);
		lessonMap.put("lessonStateCodeList", lessonStateCodeList);
		
		mnv.addObject("lessonMap", lessonMap);
		mnv.setViewName(url);
		return mnv;
	}
	
	@RequestMapping("/manager/lesson/getStudentList")
	@ResponseBody
	public ResponseEntity<Map<String,Object>> getStudentListToJSON(String lessonId,ModelAndView mnv)throws Exception{
		
		ResponseEntity<Map<String,Object>> entity=null;
		Map<String,Object> dataMap = new HashMap<String, Object>();
		
		try {
			dataMap = lessonService.getStudentListByLessonId(lessonId);		
			
			entity  = new ResponseEntity<Map<String,Object>>(dataMap,HttpStatus.OK);
		} catch (Exception e) {
			entity = new ResponseEntity<Map<String,Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();			
		}

		return entity;
	}
	
	@RequestMapping("/common/lesson/detail")
	public String lessonDetail()throws Exception{
		String url = "/common/lesson/detail";
		return url;
	}
	
	@RequestMapping("/manager/lesson/listByClassRoom")
	public String listByClassRoom()throws Exception{
		String url = "/manager/lesson/listByClassRoom";
		return url;
	}
	
	
	@RequestMapping("/member/lesson/myLessonList")
	public String showTimeTable()throws Exception{
		String url = "/member/lesson/myLessonList";
		return url;
	}
	@RequestMapping("/member/lesson/apply")
	public String applyForm()throws Exception{
		String url = "/member/lesson/apply";
		return url;
	}
	@RequestMapping("/manager/homework/list")
	public String HWKlist()throws Exception{
		String url = "/manager/homework/list";
		return url;
	}
	@RequestMapping("/member/homework/list")
	public String memberHWKlist()throws Exception{
		String url = "/member/homework/list";
		return url;
	}
	@RequestMapping("/member/homework/registForm")
	public String memberHWKRegist()throws Exception{
		String url = "/member/homework/registForm";
		return url;
	}
	
	@RequestMapping("/manager/lesson/outmodify")
	public void outmodify()throws Exception{}
	

}

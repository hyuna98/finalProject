<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Homework-Mapper">
	
	<select id="selectLessonIntegratedSearchList" parameterType="cri" resultType="lesson">
		 SELECT A.LESSONASSIGNMENT_ID AS lessonId
		      ,A.LROOM_ID AS lessonRoom
		      ,B.MNG_NAME AS mngId
		      ,A.LA_START_DATE AS lessonStartDate
		      ,A.LA_END_DATE AS lessonEndDate
              ,A.LA_SYLLABUS AS lessonSyllabus
              ,G.LROOM_MAXNO AS lessonMaxNo
		      ,F.LESSON_PRICE AS lessonPrice
		      ,E.SCODE_VALUE AS lessonSubjectType
		      ,F.LESSON_GRADE AS lessonGrade
              ,A.LA_TIME_INFO AS lessonTimeTarget
		      ,C.SCODE_VALUE AS lessonGradeCategoryCode
		      ,D.SCODE_VALUE AS lessonStateCode
              ,F.LESSON_NAME AS lessonName
              ,F.LESSON_GRADE AS lessonGrade
              ,F.LESSON_GRADE_INTEGRATE AS lessonGradeInteGrate
              ,F.LESSON_HOURS AS lessonHours
		  FROM LESSONASSIGNMENT A,MANAGER B,
		     (SELECT *
		        FROM STANDARDCODE
		       WHERE SCODE_CATEGORY = 'STUDENT_GRADE_CATEGORY_CODE'
		     )C,
		     (SELECT *
		        FROM STANDARDCODE
		       WHERE SCODE_CATEGORY = 'LA_STATE_CODE'
		     )D,
		     (SELECT *
		        FROM STANDARDCODE
		       WHERE SCODE_CATEGORY = 'MNG_SUBJECT'
		     )E, LESSON F, LESSON_ROOM G
		 WHERE A.MNG_ID = B.MNG_ID
		   AND F.LESSON_GRADE_CATEGORY_CODE = C.SCODE_KEY
		   AND A.LA_STATE_CODE = D.SCODE_KEY
		   AND F.LESSON_SUBJECT_TYPE = E.SCODE_KEY
           AND A.LESSON_ID = F.LESSON_ID
           AND G.LROOM_ID = A.LROOM_ID
           <if test="keyword!=null and !keyword.equals('')">
		   AND (
                 E.SCODE_VALUE LIKE '%'||#{keyword}||'%'
              OR F.LESSON_NAME LIKE '%'||#{keyword}||'%'
              OR G.LROOM_ID LIKE '%'||#{keyword}||'%'
              OR B.MNG_NAME LIKE '%'||#{keyword}||'%'
               )
		  </if>
		 ORDER BY 1 DESC
	</select>
	
	<update id="insertHomeWork" parameterType="homework">
			INSERT INTO HOMEWORK(HWK_ID,HWK_NAME,HWK_DUEDATE,HWK_CONTENT, ATTACH_GROUP_ID,LESSONASSIGNMENT_ID,HWK_REQDATE)
			VALUES (#{hwkId},#{hwkName},#{hwkDuedate},#{hwkContent},#{attachGroupId},#{lessonassignmentId},SYSDATE)
	</update>
	
	<update id="insertGivenHomeWorkStudentList" parameterType="java.util.Map">
		<foreach collection="studentIdlist" item="item" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL">
			INTO GIVEN_HWK(HWK_ID, STUDENT_ID)
			VALUES (#{hwkId},#{item})
		</foreach> 
	</update>
		
	<select id="selectHomeWorkSeqNextValue" resultType="int">
		SELECT HOMEWORK_SEQ.NEXTVAL FROM DUAL
	</select>
	
	<select id="selectHomeWorkList" parameterType="str" resultType="homework">
		  SELECT HWK_ID as hwkId
				,HWK_NAME as hwkName
				,HWK_DUEDATE as hwkDuedate
				,HWK_CONTENT as hwkContent
				,ATTACH_GROUP_ID as attachGroupId
				,LESSONASSIGNMENT_ID as lessonassignmentId
				,HWK_ISCOMPLETE as hwkIscomplete
				,HWK_REQDATE as hwkReqdate
		    FROM HOMEWORK
	       WHERE LESSONASSIGNMENT_ID = #{value}
	</select>
	
	<select id="selectAttachfileList" parameterType="str" resultType="attach">
		     SELECT ATTACH_GROUP_ID AS attachGroupId
			       ,ATTACH_ID AS attachId
			       ,ATTACH_PATH AS attachPath
			       ,ATTACH_NAME AS attachName
			       ,ATTACH_TYPE AS attachType
			       ,ATTACH_WRITER AS attachWriter
			       ,ATTACH_DATE AS attachDate
			   FROM ATTACH
			  WHERE ATTACH_GROUP_ID = #{value} 
	</select>
	
	<resultMap type="student" id="studentMap">
		<result property="id" column="student_id"/>
		<result property="pw" column="student_pw"/>
		<result property="name" column="STUDENT_NAME"/>
		<result property="genderCode" column="STUDENT_GENDER_CODE"/>
		<result property="email" column="STUDENT_EMAIL"/>
		<result property="zipCode" column="STUDENT_ZIP_CODE"/>
		<result property="address" column="STUDENT_ADDRESS"/>
		<result property="address2" column="STUDENT_ADDRESS2"/>
		<result property="studentPicture" column="STUDENT_STUDENT_PICTURE"/>
		<result property="birthDate" column="STUDENT_BIRTH_DATE"/>
		<result property="discountReason" column="STUDENT_DISCOUNT_REASON"/>
		<result property="discountRate" column="STUDENT_DISCOUNT_RATE"/>
		<result property="payDueDate" column="STUDENT_PAY_DUE_DATE"/>
		<result property="academyRegDate" column="STUDENT_ACADEMY_REG_DATE"/>
		<result property="stateCode" column="STUDENT_STATE_CODE"/>
		<result property="sibling" column="STUDENT_SIBLING"/>
		<result property="gradeCategoryCode" column="SCODE_VALUE"/>
		<result property="grade" column="STUDENT_GRADE"/>
		<result property="hp" column="STUDENT_HP"/>
		<result property="parentId" column="PARENT_ID"/>
		<result property="schoolNo" column="SCHOOL_NO"/>
		<result property="className" column="CLASS_NAME"/>
	</resultMap>
	
	<select id="selectIncludeStudentListByLessonID" parameterType="str" resultType="student" resultMap="studentMap">
	  SELECT A.*,
             B.SCODE_VALUE
	    FROM STUDENT A,
             (SELECT *
		        FROM STANDARDCODE
		       WHERE SCODE_CATEGORY = 'STUDENT_GRADE_CATEGORY_CODE'
		     )B
	   WHERE STUDENT_ID IN (SELECT STUDENT_ID
	                          FROM TAKE_LESSON
	                         WHERE LESSONASSIGNMENT_ID = '81')
         AND A.STUDENT_GRADE_CATEGORY_CODE = B.SCODE_KEY   
	</select>
		
	<select id="selectNotIncludeStudentListByLessonID" parameterType="str" resultType="student" resultMap="studentMap">
	SELECT A.*,
             B.SCODE_VALUE
	    FROM STUDENT A,
             (SELECT *
		        FROM STANDARDCODE
		       WHERE SCODE_CATEGORY = 'STUDENT_GRADE_CATEGORY_CODE'
		     )B
	   WHERE STUDENT_ID IN (SELECT STUDENT_ID
	                          FROM TAKE_LESSON
	                         WHERE LESSONASSIGNMENT_ID = '81')
         AND A.STUDENT_GRADE_CATEGORY_CODE = B.SCODE_KEY      
MINUS
  SELECT A.*,
             B.SCODE_VALUE
	    FROM STUDENT A,
             (SELECT *
		        FROM STANDARDCODE
		       WHERE SCODE_CATEGORY = 'STUDENT_GRADE_CATEGORY_CODE'
		     )B
	   WHERE STUDENT_ID IN (select student_id from given_hwk
  where hwk_id = '43')
         AND A.STUDENT_GRADE_CATEGORY_CODE = B.SCODE_KEY 
	</select>
		
</mapper>

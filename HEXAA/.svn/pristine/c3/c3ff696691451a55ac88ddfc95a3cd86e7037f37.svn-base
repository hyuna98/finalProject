<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Manager-Mapper">
	
	<resultMap type="manager" id="managerMap">
		<result property="id" column="mng_id"/>
		<result property="pw" column="mng_pw"/>
		<result property="mngName" column="MNG_NAME"/>
		<result property="mngGender" column="MNG_GENDER"/>
		<result property="mngEmail" column="MNG_EMAIL"/>
		<result property="mngAddress2" column="MNG_ADDRESS2"/>
		<result property="mngAddress" column="MNG_ADDRESS"/>
		<result property="mngZipCode" column="MNG_ZIP_CODE"/>
		<result property="mngPicture" column="MNG_PICTURE"/>
		<result property="mngBirthDate" column="MNG_BIRTH_DATE"/>
		<result property="mngDelete" column="MNG_DELETE"/>
		<result property="mngDeleteDate" column="MNG_DELETE_DATE"/>
		<result property="deptId" column="DEPT_ID"/>
		<result property="mngEducation" column="MNG_EDUCATION"/>
		<result property="mngMajor" column="MNG_MAJOR"/>
		<result property="mngGraduatedYear" column="MNG_GRADUATED_YEAR"/>
		<result property="mngCarrerYear" column="MNG_CARRER_YEAR"/>
		<result property="mngCertificate" column="MNG_CERTIFICATE"/>
		<result property="mngAccountNo" column="MNG_ACCOUNT_NO"/>
		<result property="mngSubject" column="MNG_SUBJECT"/>
		<result property="mngHp" column="MNG_HP"/>
	</resultMap>
	
	<select id="selectManagerById" parameterType="str" resultMap="managerMap">
		select
		*
		from manager
		where mng_id=#{id}
	</select>
	
	<sql id="keyword">
		<if test="keyword != null">
			and (MNG_NAME like '%'||#{keyword}||'%'
			or mng_id like '%'||#{keyword}||'%'
			or MNG_EMAIL like '%'||#{keyword}||'%'
			or MNG_GENDER like '%'||#{keyword}||'%'
			or MNG_DELETE like '%'||#{keyword}||'%'
			or DEPT_ID like '%'||#{keyword}||'%'
			or MNG_SUBJECT like '%'||#{keyword}||'%'
			or MNG_HP like '%'||#{keyword}||'%'
			or MNG_MAJOR like '%'||#{keyword}||'%')
		</if>	
	</sql>
	
	<select id="selectManagerList" parameterType="str" resultMap="managerMap">
		select 
		*
		from manager
		where mng_id is not null
		<include refid="keyword"/> 
		order by MNG_NAME
	</select>
	
	<select id="selectManagerListCount" resultType="int">
		select count(*)
		from manager
		where mng_id is not null
		<include refid="keyword"/> 
	</select>
	
	
	<select id="selectWorkingTeacherListSearchByName" parameterType="manager" resultType="manager">
	
		  SELECT A.MNG_ID AS id,
		        A.MNG_NAME AS mngName,
		        A.MNG_GENDER AS mngGender,
		        A.MNG_EMAIL AS mngEmail,
		        A.MNG_ADDRESS2 AS mngAddress2,
		        A.MNG_ADDRESS AS mngAddress,
		        A.MNG_ZIP_CODE AS mngZipCode,
		        A.MNG_PICTURE AS mngPicture,
		        A.MNG_BIRTH_DATE AS mngBirthDate,
		        C.SCODE_VALUE AS mngDelete,
		        A.MNG_PW AS pw,
		        A.MNG_DELETE_DATE AS mngDeleteDate,
		        A.DEPT_ID AS deptId,
		        A.MNG_EDUCATION AS mngEducation,
		        A.MNG_MAJOR AS mngMajor,
		        A.MNG_GRADUATED_YEAR AS mngGraduatedYear,
		        A.MNG_CARRER_YEAR AS mngCarrerYear,
		        A.MNG_CERTIFICATE AS mngCertificate,
		        A.MNG_ACCOUNT_NO AS mngAccountNo,
		        B.SCODE_VALUE AS mngSubjectKor,
		        B.SCODE_KEY AS mngSubject
		   FROM MANAGER A,
                (SELECT *
                   FROM STANDARDCODE
                  WHERE SCODE_CATEGORY = 'MNG_SUBJECT')B,
                (SELECT *
                   FROM STANDARDCODE
                  WHERE SCODE_CATEGORY = 'MNG_DELETE')C 
          WHERE A.MNG_SUBJECT = B.SCODE_KEY
            AND A.MNG_DELETE = C.SCODE_KEY
		    AND A.MNG_DELETE = 'SRVD'
		    AND A.DEPT_ID = 'EDU'
		    AND A.MNG_SUBJECT = #{mngSubject}
		  <if test="mngName != null">
		    AND MNG_NAME like '%'||#{mngName}||'%'
		  </if>
		  
	</select>
	<select id="selectWorkingTeacherList" resultType="manager">
	
		  SELECT A.MNG_ID AS id,
		        A.MNG_NAME AS mngName,
		        A.MNG_GENDER AS mngGender,
		        A.MNG_EMAIL AS mngEmail,
		        A.MNG_ADDRESS2 AS mngAddress2,
		        A.MNG_ADDRESS AS mngAddress,
		        A.MNG_ZIP_CODE AS mngZipCode,
		        A.MNG_PICTURE AS mngPicture,
		        A.MNG_BIRTH_DATE AS mngBirthDate,
		        C.SCODE_VALUE AS mngDelete,
		        A.MNG_PW AS pw,
		        A.MNG_DELETE_DATE AS mngDeleteDate,
		        A.DEPT_ID AS deptId,
		        A.MNG_EDUCATION AS mngEducation,
		        A.MNG_MAJOR AS mngMajor,
		        A.MNG_GRADUATED_YEAR AS mngGraduatedYear,
		        A.MNG_CARRER_YEAR AS mngCarrerYear,
		        A.MNG_CERTIFICATE AS mngCertificate,
		        A.MNG_ACCOUNT_NO AS mngAccountNo,
		        B.SCODE_VALUE AS mngSubjectKor,
		        B.SCODE_KEY AS mngSubject
		   FROM MANAGER A,
                (SELECT *
                   FROM STANDARDCODE
                  WHERE SCODE_CATEGORY = 'MNG_SUBJECT')B,
                (SELECT *
                   FROM STANDARDCODE
                  WHERE SCODE_CATEGORY = 'MNG_DELETE')C 
          WHERE A.MNG_SUBJECT = B.SCODE_KEY
            AND A.MNG_DELETE = C.SCODE_KEY
		    AND A.MNG_DELETE = 'SRVD'
		    AND A.DEPT_ID = 'EDU'
		  
	</select>
	
	<select id="selectManagerDetailById" parameterType="str" resultType="manager">
	
		SELECT A.MNG_ID AS id,
		        A.MNG_NAME AS mngName,
		        A.MNG_GENDER AS mngGender,
		        A.MNG_EMAIL AS mngEmail,
		        A.MNG_ADDRESS2 AS mngAddress2,
		        A.MNG_ADDRESS AS mngAddress,
		        A.MNG_ZIP_CODE AS mngZipCode,
		        A.MNG_PICTURE AS mngPicture,
		        A.MNG_BIRTH_DATE AS mngBirthDate,
		        C.SCODE_VALUE AS mngDelete,
		        A.MNG_PW AS pw,
		        A.MNG_DELETE_DATE AS mngDeleteDate,
		        A.DEPT_ID AS deptId,
		        A.MNG_EDUCATION AS mngEducation,
		        A.MNG_MAJOR AS mngMajor,
		        A.MNG_GRADUATED_YEAR AS mngGraduatedYear,
		        A.MNG_CARRER_YEAR AS mngCarrerYear,
		        A.MNG_CERTIFICATE AS mngCertificate,
		        A.MNG_ACCOUNT_NO AS mngAccountNo,
		        B.SCODE_VALUE AS mngSubjectKor,
		        B.SCODE_KEY AS mngSubject
		   FROM MANAGER A,
                (SELECT *
                   FROM STANDARDCODE
                  WHERE SCODE_CATEGORY = 'MNG_SUBJECT')B,
                (SELECT *
                   FROM STANDARDCODE
                  WHERE SCODE_CATEGORY = 'MNG_DELETE')C 
          WHERE A.MNG_SUBJECT = B.SCODE_KEY
            AND A.MNG_DELETE = C.SCODE_KEY
		    AND MNG_ID = #{value}
		    
	</select>
	
	<update id="updatePwd" parameterType="str">
		UPDATE MANAGER
		SET MNG_PW = #{emailAddress}
			WHERE MNG_ID = #{emailAddress}
	</update>
	
	<update id="insertManager" parameterType="manager">
		MERGE INTO manager
		USING dual
		ON (mng_id = #{id})
 		WHEN MATCHED THEN
      		UPDATE SET 
	      		MNG_NAME = #{mngName},
				MNG_GENDER = #{mngGender},
				MNG_EMAIL = #{mngEmail},
				MNG_ADDRESS2 = #{mngAddress2},
				MNG_ADDRESS = #{mngAddress},
				MNG_ZIP_CODE = #{mngZipCode},
				MNG_PICTURE = #{mngPicture},
				MNG_BIRTH_DATE = #{mngBirthDate},
				MNG_DELETE = #{mngDelete},
				MNG_DELETE_DATE = #{mngDeleteDate},
				DEPT_ID = #{deptId},
				MNG_EDUCATION = #{mngEducation},
				MNG_MAJOR = #{mngMajor},
				MNG_GRADUATED_YEAR = #{mngGraduatedYear},
				MNG_CARRER_YEAR = #{mngCarrerYear},
				MNG_CERTIFICATE = #{mngCertificate},
				MNG_ACCOUNT_NO = #{mngAccountNo},
				MNG_SUBJECT = #{mngSubject}, 
				MNG_HP = #{mngHp}
 		WHEN NOT MATCHED THEN
      		INSERT
      		(MNG_ID,MNG_NAME,MNG_GENDER,MNG_EMAIL,MNG_ADDRESS2,MNG_ADDRESS,MNG_ZIP_CODE,MNG_PICTURE,MNG_BIRTH_DATE,MNG_DELETE,MNG_PW,MNG_DELETE_DATE,
			DEPT_ID,MNG_EDUCATION,MNG_MAJOR,MNG_GRADUATED_YEAR,MNG_CARRER_YEAR,MNG_CERTIFICATE,MNG_ACCOUNT_NO,MNG_SUBJECT,MNG_HP) 
			
			VALUES (#{id},#{mngName},#{mngGender},#{mngEmail},#{mngAddress2},#{mngAddress},#{mngZipCode},
			#{mngPicture},#{mngBirthDate},#{mngDelete},#{pw},#{mngDeleteDate},#{deptId},#{mngEducation},#{mngMajor},#{mngGraduatedYear},#{mngCarrerYear},#{mngCertificate},#{mngAccountNo},#{mngSubject},#{mngHp})
	</update>
	
	<update id="modifyPwd" parameterType="manager">
		UPDATE manager
		SET mng_pw = #{pw}
			WHERE mng_id = #{id}
	</update>
</mapper>
